syntax = "proto2";

package com.rvprg.raft.protocol.messages;

option java_outer_classname = "ProtocolMessages";

message RaftMessage {
    enum MessageType {
        RequestVote = 1;
        RequestVoteResponse = 2;
        AppendEntries = 3;
        AppendEntriesResponse = 4;
        SnapshotDownloadRequest = 5;
    }

    required MessageType type = 1;

    optional RequestVote requestVote = 2;
    optional RequestVoteResponse requestVoteResponse = 3;
    optional AppendEntries appendEntries = 4;
    optional AppendEntriesResponse appendEntriesResponse = 5;
    optional SnapshotDownloadRequest snapshotDownloadRequest = 6;
}

message SnapshotDownloadRequest {
    required string memberId = 1;
    required string snapshotId = 2;
}

message RequestVote {
    required uint32 term = 1;
    required string candidateId = 2;
    required uint64 lastLogIndex = 3;
    required uint32 lastLogTerm = 4;
}

message RequestVoteResponse {
    required uint32 term = 1;
    required bool voteGranted = 2;
}

message LogEntry {
    enum LogEntryType {
        StateMachineCommand = 1;
        NoOperationCommand = 2;
        RaftProtocolCommand = 3;
    }
    required uint32 term = 1;
    required bytes entry = 2;
    required LogEntryType type = 3;
}

message AppendEntries {
    required uint32 term = 1;
    optional string leaderId = 2;
    optional uint64 prevLogIndex = 3;
    optional uint32 prevLogTerm = 4;
    optional uint64 leaderCommitIndex = 5;
    repeated LogEntry logEntries = 6;
}

message AppendEntriesResponse {
    required uint32 term = 1;
    required bool success = 2;
    optional uint64 startIndex = 3;
    optional uint64 endIndex = 4;
    optional uint64 logLength = 5;
}

message DynamicMembershipChangeCommand {
    enum CommandType {
        AddMember = 1;
        RemoveMember = 2;
    }
    required CommandType type = 1;
    required bytes memberId = 2;
}